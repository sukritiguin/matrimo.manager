/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PricingImport } from './routes/pricing'
import { Route as FeaturesImport } from './routes/features'
import { Route as ContactImport } from './routes/contact'
import { Route as AboutImport } from './routes/about'
import { Route as ProtectedRouteImport } from './routes/_protected/route'
import { Route as IndexImport } from './routes/index'
import { Route as ProtectedProfileImport } from './routes/_protected/profile'
import { Route as ProtectedLibraryImport } from './routes/_protected/library'
import { Route as authAuthImport } from './routes/(auth)/_auth'
import { Route as ProtectedEditorEditorIdImport } from './routes/_protected/editor/$editorId'
import { Route as authAuthGoogleCallbackImport } from './routes/(auth)/_auth.google.callback'
import { Route as authAuthAuthSignupImport } from './routes/(auth)/_auth.auth.signup'
import { Route as authAuthAuthSigninImport } from './routes/(auth)/_auth.auth.signin'

// Create Virtual Routes

const authImport = createFileRoute('/(auth)')()

// Create/Update Routes

const authRoute = authImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const PricingRoute = PricingImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRoute,
} as any)

const FeaturesRoute = FeaturesImport.update({
  id: '/features',
  path: '/features',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRouteRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedProfileRoute = ProtectedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => ProtectedRouteRoute,
} as any)

const ProtectedLibraryRoute = ProtectedLibraryImport.update({
  id: '/library',
  path: '/library',
  getParentRoute: () => ProtectedRouteRoute,
} as any)

const authAuthRoute = authAuthImport.update({
  id: '/_auth',
  getParentRoute: () => authRoute,
} as any)

const ProtectedEditorEditorIdRoute = ProtectedEditorEditorIdImport.update({
  id: '/editor/$editorId',
  path: '/editor/$editorId',
  getParentRoute: () => ProtectedRouteRoute,
} as any)

const authAuthGoogleCallbackRoute = authAuthGoogleCallbackImport.update({
  id: '/google/callback',
  path: '/google/callback',
  getParentRoute: () => authAuthRoute,
} as any)

const authAuthAuthSignupRoute = authAuthAuthSignupImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => authAuthRoute,
} as any)

const authAuthAuthSigninRoute = authAuthAuthSigninImport.update({
  id: '/auth/signin',
  path: '/auth/signin',
  getParentRoute: () => authAuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/features': {
      id: '/features'
      path: '/features'
      fullPath: '/features'
      preLoaderRoute: typeof FeaturesImport
      parentRoute: typeof rootRoute
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingImport
      parentRoute: typeof rootRoute
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/_auth': {
      id: '/(auth)/_auth'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authAuthImport
      parentRoute: typeof authRoute
    }
    '/_protected/library': {
      id: '/_protected/library'
      path: '/library'
      fullPath: '/library'
      preLoaderRoute: typeof ProtectedLibraryImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/_protected/profile': {
      id: '/_protected/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProtectedProfileImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/_protected/editor/$editorId': {
      id: '/_protected/editor/$editorId'
      path: '/editor/$editorId'
      fullPath: '/editor/$editorId'
      preLoaderRoute: typeof ProtectedEditorEditorIdImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/(auth)/_auth/auth/signin': {
      id: '/(auth)/_auth/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof authAuthAuthSigninImport
      parentRoute: typeof authAuthImport
    }
    '/(auth)/_auth/auth/signup': {
      id: '/(auth)/_auth/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof authAuthAuthSignupImport
      parentRoute: typeof authAuthImport
    }
    '/(auth)/_auth/google/callback': {
      id: '/(auth)/_auth/google/callback'
      path: '/google/callback'
      fullPath: '/google/callback'
      preLoaderRoute: typeof authAuthGoogleCallbackImport
      parentRoute: typeof authAuthImport
    }
  }
}

// Create and export the route tree

interface ProtectedRouteRouteChildren {
  ProtectedLibraryRoute: typeof ProtectedLibraryRoute
  ProtectedProfileRoute: typeof ProtectedProfileRoute
  ProtectedEditorEditorIdRoute: typeof ProtectedEditorEditorIdRoute
}

const ProtectedRouteRouteChildren: ProtectedRouteRouteChildren = {
  ProtectedLibraryRoute: ProtectedLibraryRoute,
  ProtectedProfileRoute: ProtectedProfileRoute,
  ProtectedEditorEditorIdRoute: ProtectedEditorEditorIdRoute,
}

const ProtectedRouteRouteWithChildren = ProtectedRouteRoute._addFileChildren(
  ProtectedRouteRouteChildren,
)

interface authAuthRouteChildren {
  authAuthAuthSigninRoute: typeof authAuthAuthSigninRoute
  authAuthAuthSignupRoute: typeof authAuthAuthSignupRoute
  authAuthGoogleCallbackRoute: typeof authAuthGoogleCallbackRoute
}

const authAuthRouteChildren: authAuthRouteChildren = {
  authAuthAuthSigninRoute: authAuthAuthSigninRoute,
  authAuthAuthSignupRoute: authAuthAuthSignupRoute,
  authAuthGoogleCallbackRoute: authAuthGoogleCallbackRoute,
}

const authAuthRouteWithChildren = authAuthRoute._addFileChildren(
  authAuthRouteChildren,
)

interface authRouteChildren {
  authAuthRoute: typeof authAuthRouteWithChildren
}

const authRouteChildren: authRouteChildren = {
  authAuthRoute: authAuthRouteWithChildren,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof authAuthRouteWithChildren
  '': typeof ProtectedRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/features': typeof FeaturesRoute
  '/pricing': typeof PricingRoute
  '/library': typeof ProtectedLibraryRoute
  '/profile': typeof ProtectedProfileRoute
  '/editor/$editorId': typeof ProtectedEditorEditorIdRoute
  '/auth/signin': typeof authAuthAuthSigninRoute
  '/auth/signup': typeof authAuthAuthSignupRoute
  '/google/callback': typeof authAuthGoogleCallbackRoute
}

export interface FileRoutesByTo {
  '/': typeof authAuthRouteWithChildren
  '': typeof ProtectedRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/features': typeof FeaturesRoute
  '/pricing': typeof PricingRoute
  '/library': typeof ProtectedLibraryRoute
  '/profile': typeof ProtectedProfileRoute
  '/editor/$editorId': typeof ProtectedEditorEditorIdRoute
  '/auth/signin': typeof authAuthAuthSigninRoute
  '/auth/signup': typeof authAuthAuthSignupRoute
  '/google/callback': typeof authAuthGoogleCallbackRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_protected': typeof ProtectedRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/features': typeof FeaturesRoute
  '/pricing': typeof PricingRoute
  '/(auth)': typeof authRouteWithChildren
  '/(auth)/_auth': typeof authAuthRouteWithChildren
  '/_protected/library': typeof ProtectedLibraryRoute
  '/_protected/profile': typeof ProtectedProfileRoute
  '/_protected/editor/$editorId': typeof ProtectedEditorEditorIdRoute
  '/(auth)/_auth/auth/signin': typeof authAuthAuthSigninRoute
  '/(auth)/_auth/auth/signup': typeof authAuthAuthSignupRoute
  '/(auth)/_auth/google/callback': typeof authAuthGoogleCallbackRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/contact'
    | '/features'
    | '/pricing'
    | '/library'
    | '/profile'
    | '/editor/$editorId'
    | '/auth/signin'
    | '/auth/signup'
    | '/google/callback'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/contact'
    | '/features'
    | '/pricing'
    | '/library'
    | '/profile'
    | '/editor/$editorId'
    | '/auth/signin'
    | '/auth/signup'
    | '/google/callback'
  id:
    | '__root__'
    | '/'
    | '/_protected'
    | '/about'
    | '/contact'
    | '/features'
    | '/pricing'
    | '/(auth)'
    | '/(auth)/_auth'
    | '/_protected/library'
    | '/_protected/profile'
    | '/_protected/editor/$editorId'
    | '/(auth)/_auth/auth/signin'
    | '/(auth)/_auth/auth/signup'
    | '/(auth)/_auth/google/callback'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProtectedRouteRoute: typeof ProtectedRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  FeaturesRoute: typeof FeaturesRoute
  PricingRoute: typeof PricingRoute
  authRoute: typeof authRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProtectedRouteRoute: ProtectedRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  FeaturesRoute: FeaturesRoute,
  PricingRoute: PricingRoute,
  authRoute: authRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_protected",
        "/about",
        "/contact",
        "/features",
        "/pricing",
        "/(auth)"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_protected": {
      "filePath": "_protected/route.tsx",
      "children": [
        "/_protected/library",
        "/_protected/profile",
        "/_protected/editor/$editorId"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/features": {
      "filePath": "features.tsx"
    },
    "/pricing": {
      "filePath": "pricing.tsx"
    },
    "/(auth)": {
      "filePath": "(auth)",
      "children": [
        "/(auth)/_auth"
      ]
    },
    "/(auth)/_auth": {
      "filePath": "(auth)/_auth.tsx",
      "parent": "/(auth)",
      "children": [
        "/(auth)/_auth/auth/signin",
        "/(auth)/_auth/auth/signup",
        "/(auth)/_auth/google/callback"
      ]
    },
    "/_protected/library": {
      "filePath": "_protected/library.tsx",
      "parent": "/_protected"
    },
    "/_protected/profile": {
      "filePath": "_protected/profile.tsx",
      "parent": "/_protected"
    },
    "/_protected/editor/$editorId": {
      "filePath": "_protected/editor/$editorId.tsx",
      "parent": "/_protected"
    },
    "/(auth)/_auth/auth/signin": {
      "filePath": "(auth)/_auth.auth.signin.tsx",
      "parent": "/(auth)/_auth"
    },
    "/(auth)/_auth/auth/signup": {
      "filePath": "(auth)/_auth.auth.signup.tsx",
      "parent": "/(auth)/_auth"
    },
    "/(auth)/_auth/google/callback": {
      "filePath": "(auth)/_auth.google.callback.tsx",
      "parent": "/(auth)/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
