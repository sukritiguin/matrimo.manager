generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            Int           @id @default(autoincrement())
    name          String?
    username      String?
    email         String        @unique
    emailVerified DateTime?
    password      UserPassword?
    bio           String?
    imageUrl      String?
    verified      Boolean       @default(false)
    onBoarding    Boolean       @default(false)

    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    account   Account[]
    sessions  Session[]
}

model UserPassword {
    hash   String
    userId Int    @unique
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       Int
    expires      DateTime
    user         User?    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model VerificationToken {
    id         String   @id @default(cuid())
    type       String
    identifier String
    token      String   @unique
    expires    DateTime
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    @@index([identifier])
}

model Account {
    id                String  @id @default(cuid())
    userId            Int
    type              String
    provider          String
    providerAccountId String
    providerEmail     String?
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
    @@index([type])
}
